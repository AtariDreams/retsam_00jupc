//==============================================================================
/**
 * @file	balloon_control.h
 * @brief	風船ミニゲームのデータ設定ファイル
 * @author	matsuda
 * @date	2008.02.21(木)
 */
//==============================================================================

//==============================================================================
//	システム
//==============================================================================
///風船ミニゲーム終了までの残り時間(フレーム数単位)
#define BALLOON_GAME_PLAY_TIME		(43 * 30 + 12)

///ゲーム開始後、名前を消去するまでの時間(フレーム指定)
#define BALLOON_NAME_ERASE_TIME		(3 * 30)


//==============================================================================
//	ソーナンス
//==============================================================================
///ソーナンスを戻すパワー値の初期値
#define SONANS_RETURN_POWER_INIT		(0x2000)	//fx32
///ソーナンスを戻すパワーの最大値
#define SONANS_RETURN_POWER_MAX			(0x11000)		//fx32
///ソーナンスを戻すパワー加算値：GREAT
#define SONANS_RETURN_POWER_ADD_GREAT	(0x1000)		//fx32
///ソーナンスを戻すパワー加算値：GOOD
#define SONANS_RETURN_POWER_ADD_GOOD	(0x1000)		//fx32


//--------------------------------------------------------------
//	送る空気
//--------------------------------------------------------------
///ソーナンスが潰れた時、何%以上でMAX判定とするか
#define SONANS_POMP_AREA_MAX_LINE		(98)
///MAX判定時に送る空気量
#define SONANS_POMP_MAX_AIR				(1200)

///ソーナンスが潰れた時、何%以上GREAT判定とするか
#define SONANS_POMP_AREA_GREAT_LINE		(SONANS_POMP_AREA_MAX_LINE)
///ソーナンスが潰れた時、何%以上でGOOD判定とするか
#define SONANS_POMP_AREA_GOOD_LINE		(SONANS_POMP_AREA_MAX_LINE)

///ソーナンスが潰れた時、この数値未満の面積の場合は無視する(%指定)
#define SONANS_POMP_AREA_IGNORE_LINE	(25)

//--------------------------------------------------------------
//	ボルテージ
//--------------------------------------------------------------
///ソーナンスのボルテージによって変更していくカラーの最大evy値
#define SONANS_VOLTAGE_EVY_MAX		(12)
///ソーナンスのボルテージによって変更していく時のカラーコード
#define SONANS_VOLTAGE_COLOR		(0x001f)
///ソーナンスのボルテージ最大値(押し込んだ面積＝ボルテージ値)
#define SONANS_VOLTAGE_MAX			(800)
///ボルテージが最大の時、発生する空気を何％増量するか(100を指定すると2倍)
#define VOLTAGE_MAX_REVISE			(25)

//==============================================================================
//	風船
//==============================================================================
///この数字以上に風船を割っていたら風船アイコンはこのレベルになる
#define BALLOON_LEVEL3_NUM		(10)
#define BALLOON_LEVEL2_NUM		(5)

///スタックに溜まっている空気を何フレームで消化させるか
#define AIR_ADD_FRAME		(6)


//==============================================================================
//	カウンター
//==============================================================================
///カウンター一致後に入れるウェイト
#define COUNTER_AGREE_AFTER_WAIT	(15)
///カウンターが動き出す前に入れるウェイト
#define COUNTER_MOVE_START_WAIT		(2)
///カウンターが停止する前に何周させるか
#define COUNTER_ROTATE_NUM			(1)
///カウンターの回転速度(ドット単位)
#define COUNTER_SPEED			(23)

//==============================================================================
//	ブースター
//==============================================================================
///2個目のブースター登場周
#define BOOSTER_2ND_APPEAR_LAP		(2)
///3個目のブースター登場周
#define BOOSTER_3RD_APPEAR_LAP		(3)
///ブースターの登場に何フレームかけるか
#define BOOSTER_APPEAR_FRAME		(15)
///ブースター：登場時のジャンプ移動ふり幅
#define BOOSTER_APPEAR_JUMP_FURIHABA_Y	(24 << FX32_SHIFT)

