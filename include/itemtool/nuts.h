//============================================================================================
/**
 * @file	nuts.h
 * @brief	木の実データ処理
 * @author	Hiroyuki Nakamura
 * @date	06.01.27
 */
//============================================================================================
#ifndef NUTS_H
#define NUTS_H

#include "system/arc_tool.h"
#include "itemsym.h"

#undef GLOBAL
#ifdef NUTS_H_GLOBAL
#define GLOBAL	/*	*/
#else
#define GLOBAL	extern
#endif


//============================================================================================
//	定数定義
//============================================================================================
typedef struct _NUTS_DATA	NUTSDATA;				// 木の実データ

#define	NUTS_START_ITEMNUM	( ITEM_KURABONOMI )		// アイテム番号の最初の木の実

// パラメータ取得定義
enum {
	NUTS_PRM_SIZE = 0,			// 大きさ
	NUTS_PRM_HARDNESS,			// 堅さ
	NUTS_PRM_MAGNIFICATION,		// 実の倍率
	NUTS_PRM_SPEED,				// 育つ速度
	NUTS_PRM_ABSORPTION,		// 根の吸収力
	NUTS_PRM_KARAI,				// 辛さ
	NUTS_PRM_SIBUI,				// 渋さ
	NUTS_PRM_AMAI,				// 甘さ
	NUTS_PRM_NIGAI,				// 苦さ
	NUTS_PRM_SUPPAI,			// 酸っぱさ
	NUTS_PRM_UMAI,				// 旨さ
};


//============================================================================================
//	プロトタイプ宣言
//============================================================================================

//--------------------------------------------------------------------------------------------
/**
 * 木の実データのハンドル取得
 *
 * @param	id		木の実番号
 * @param	heap	ヒープID
 *
 * @return	データハンドル
 */
//--------------------------------------------------------------------------------------------
GLOBAL ARCHANDLE * Nuts_DataHandleGet( u32 heap );

//--------------------------------------------------------------------------------------------
/**
 * 木の実データロード（ハンドル使用）
 *
 * @param	handle	データハンドル
 * @param	id		木の実番号
 * @param	heap	ヒープID
 *
 * @return	木の実データ
 */
//--------------------------------------------------------------------------------------------
GLOBAL NUTSDATA * Nuts_DataLoadHandle( ARCHANDLE * handle, u32 id, u32 heap );

//--------------------------------------------------------------------------------------------
/**
 * 木の実データハンドルを閉じる
 *
 * @param	handle	データハンドル
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
GLOBAL void Nuts_DataHandleClose( ARCHANDLE * handle );

//--------------------------------------------------------------------------------------------
/**
 * 木の実データロード
 *
 * @param	id		木の実番号
 * @param	heap	ヒープID
 *
 * @return	木の実データ
 */
//--------------------------------------------------------------------------------------------
GLOBAL NUTSDATA * Nuts_DataLoad( u32 id, u32 heap );

//--------------------------------------------------------------------------------------------
/**
 * 木の実データロード（アイテム番号から）
 *
 * @param	item	アイテム番号
 * @param	heap	ヒープID
 *
 * @return	木の実データ
 */
//--------------------------------------------------------------------------------------------
GLOBAL NUTSDATA * Nuts_DataLoadItem( u32 item, u32 heap );

//--------------------------------------------------------------------------------------------
/**
 * 木の実パラメータ取得
 *
 * @param	dat		木の実データ
 * @param	prm		取得パラメータID
 *
 * @return	取得パラメータ
 */
//--------------------------------------------------------------------------------------------
GLOBAL u32 Nuts_ParamGet( NUTSDATA * dat, u32 prm );

//--------------------------------------------------------------------------------------------
/**
 * 木の実名取得
 *
 * @param   buf			格納先
 * @param	id			木の実番号
 * @param   heap		ヒープID（テンポラリとして使用）
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
GLOBAL void NutsNameGet( STRBUF * buf, u16 id, u32 heap );

//--------------------------------------------------------------------------------------------
/**
 * 木の実名取得（領域確保）
 *
 * @param	id			木の実番号
 * @param   heap		ヒープID（テンポラリとして使用）
 *
 * @return	取得した木の実名のバッファ
 *
 * @li	解放は各自で
 */
//--------------------------------------------------------------------------------------------
GLOBAL STRBUF * NutsNameGetAlloc( u16 id, u32 heap );

//--------------------------------------------------------------------------------------------
/**
 * 木の実名取得（アイテム番号から）
 *
 * @param   buf			格納先
 * @param	item		アイテム番号
 * @param   heap		ヒープID（テンポラリとして使用）
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
GLOBAL void NutsNameGet_Item( STRBUF * buf, u16 item, u32 heap );

//--------------------------------------------------------------------------------------------
/**
 * 木の実名取得（アイテム番号から）（領域確保）
 *
 * @param	item		アイテム番号
 * @param   heap		ヒープID（テンポラリとして使用）
 *
 * @return	取得した木の実名のバッファ
 *
 * @li	解放は各自で
 */
//--------------------------------------------------------------------------------------------
GLOBAL STRBUF * NutsNameGetAlloc_Item( u16 item, u32 heap );

//--------------------------------------------------------------------------------------------
/**
 * 説明取得
 *
 * @param   buf			格納先
 * @param	id			木の実番号
 * @param	heap		ヒープID（テンポラリとして使用）
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
GLOBAL void NutsInfoGet( STRBUF * buf, u16 id, u16 heap );

//--------------------------------------------------------------------------------------------
/**
 * 説明取得（領域確保）
 *
 * @param	id			木の実番号
 * @param	heap		ヒープID（テンポラリとして使用）
 *
 * @return	取得した木の実名のバッファ
 *
 * @li	解放は各自で
 */
//--------------------------------------------------------------------------------------------
GLOBAL STRBUF * NutsInfoGetAlloc( u16 id, u16 heap );

//--------------------------------------------------------------------------------------------
/**
 * 説明取得（アイテム番号から）
 *
 * @param   buf			格納先
 * @param	item		アイテム番号
 * @param	heap		ヒープID（テンポラリとして使用）
 *
 * @return	none
 */
//--------------------------------------------------------------------------------------------
GLOBAL void NutsInfoGet_Item( STRBUF * buf, u16 item, u16 heap );

//--------------------------------------------------------------------------------------------
/**
 * 説明取得（アイテム番号から）（領域確保）
 *
 * @param	item		アイテム番号
 * @param	heap		ヒープID（テンポラリとして使用）
 *
 * @return	取得した木の実名のバッファ
 *
 * @li	解放は各自で
 */
//--------------------------------------------------------------------------------------------
GLOBAL STRBUF * NutsInfoGetAlloc_Item( u16 item, u16 heap );

#undef GLOBAL
#endif	/* NUTS_H */
